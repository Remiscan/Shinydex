/* Empêcher le contour bizarre que Chrome ajoute autour d'éléments en focus */
* {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
} 
*:focus:not(:focus-visible) {
  outline-style: none;
}

shiny-stars {
  display: inline-grid;
  --color: currentColor;
}

.icone {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  font-size: 1.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  color: var(--text-color);
}

a.icon-button {
  border: none;
  margin: 0;
  padding: 0;
  font: inherit;
  text-decoration: none;

  border-radius: 20px;
  display: grid;
  place-items: center;
  --elevation-shadow: none;

  width: 40px;
  height: 40px;
  --surface-opacity: 0;
  --elevation-opacity: 0;
  --state-tint: var(--on-surface);
}

a.icon-button::before {
  width: 48px;
  height: 48px;
  content: '';
  position: absolute;
}

a.icon-button > * {
  grid-row: 1;
  grid-column: 1;
}

/* Buttons */

button {
  -webkit-appearance: none;
  appearance: none;
  background: none;
  border: none;
  margin: 0;
  padding: 0;
  font: inherit;

  height: 40px;
  min-height: 40px;
  width: fit-content;
  border-radius: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 0 24px 0 16px;
  margin: auto;
  --elevation-shadow: none;
}

button.only-icon .label,
button.only-text .icon {
  display: none;
}

button.only-icon {
  padding: 0 16px;
}

button.only-text {
  padding: 0 24px;
}

/* Elevated */

button.elevated {
  --surface-color: var(--surface);
  --elevation-opacity: var(--elevation-1-opacity);
  --elevation-shadow: var(--elevation-1-shadow);
  color: rgb(var(--primary));
  --state-tint: var(--primary);
}

button.elevated:focus {
  --elevation-opacity: var(--elevation-1-opacity);
  --elevation-shadow: var(--elevation-1-shadow);
}

button.elevated:hover {
  --elevation-opacity: var(--elevation-2-opacity);
  --elevation-shadow: var(--elevation-2-shadow);
}

button.elevated:active {
  --elevation-opacity: var(--elevation-1-opacity);
  --elevation-shadow: var(--elevation-1-shadow);
}

/* Filled */

button.filled {
  --surface-color: var(--primary);
  --surface-opacity: 1;
  color: rgb(var(--on-primary));
  --state-tint: var(--on-primary);
}

/* Filled tonal */

button.filled.tonal {
  --surface-color: var(--secondary-container);
  color: rgb(var(--on-secondary-container));
  --state-tint: var(--on-secondary-container);
}

button.filled.danger {
  --surface-color: var(--error-container);
  color: rgb(var(--on-error-container));
  --state-tint: var(--on-error-container);
}

/* Outlined */

button.outlined {
  color: rgb(var(--primary));
  border: 1px solid rgb(var(--outline));
  --state-tint: var(--primary);
}

button.outlined:focus {
  border: 1px solid rgb(var(--primary));
}

button.outlined:focus:not(:focus-visible) {
  border: 1px solid rgb(var(--outline));
}

button.outlined:not(.filled) {
  --surface-opacity: 0;
}

/* Text */

button.text-button {
  --surface-opacity: 0;
  color: rgb(var(--primary));
  --state-tint: var(--primary);
}

/* Fab */

button.fab {
  --surface-color: var(--primary-container);
  --elevation-opacity: var(--elevation-1-opacity);
  --elevation-shadow: var(--elevation-1-shadow);
  color: rgb(var(--on-primary-container));
  --state-tint: var(--on-primary-container);
  min-width: 56px;
  height: 56px;
  border-radius: 16px;
  margin: 16px;
}

button.fab.small {
  min-width: 40px;
  height: 40px;
  border-radius: 12px;
}

button.fab.large {
  min-width: 96px;
  height: 96px;
  border-radius: 28px;
}

button.fab:focus {
  --elevation-opacity: var(--elevation-1-opacity);
  --elevation-shadow: var(--elevation-1-shadow);
}

button.fab:hover {
  --elevation-opacity: var(--elevation-2-opacity);
  --elevation-shadow: var(--elevation-2-shadow);
}

button.fab:active {
  --elevation-opacity: var(--elevation-1-opacity);
  --elevation-shadow: var(--elevation-1-shadow);
}

/* Icon button */

button.icon-button {
  width: 40px;
  height: 40px;
  --surface-opacity: 0;
  --elevation-opacity: 0;
  --state-tint: var(--on-surface);
}

button.icon-button::before {
  width: 48px;
  height: 48px;
  content: '';
  position: absolute;
}

/* Disabled */

button:disabled {
  --surface-color: var(--on-surface) !important;
  --elevation-opacity: 0 !important;
  --surface-opacity: .12 !important;
  --state-opacity: 0 !important;
  color: rgb(var(--on-surface), .38) !important;
}

button.outlined:disabled {
  outline: 1px solid rgb(var(--on-surface), .12);
}

/*input[type=file] + label,
button {
  -webkit-appearance: none;
  appearance: none;
  background: none;
  border: none;
  margin: 0;

  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  gap: .5ch;
  position: relative;

  width: fit-content;
  padding: 5px 10px;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-elevation-low);

  font-family: inherit;
  font-size: inherit;
  font-weight: 500;
  color: var(--text-color-inverse);
}

input[type=file] + label.ghost,
button.ghost,
button.text {
  border: 1px solid var(--button-color);
  box-shadow: none;
  color: var(--text-color);
}

button.text {
  border: none;
  --button-color: var(--text-color);
  margin: 0 -0.6em;
}

input[type=file] + label > *,
button > * {
  z-index: 1;
}

input[type=file] + label::before,
button::before {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: var(--button-color);
  opacity: 1;
  z-index: 0;
  border-radius: var(--border-radius);
}

button.ghost::before {
  z-index: -1;
}

button[type="reset"]::before {
  display: none;
}

input[type=file] + label:hover::before,
input[type=file]:focus + label::before,
button:hover::before,
button:focus::before {
  opacity: .9;
}

input[type=file]:active + label::before,
button:active::before {
  opacity: .8;
}

input[type=file] + label.ghost::before,
button.ghost::before,
button.text::before {
  opacity: 0;
}

input[type=file] + label.ghost:hover::before,
input[type=file]:focus + label.ghost::before,
button.ghost:hover::before,
button.ghost:focus::before,
button.text:hover::before,
button.text:focus::before {
  opacity: .15;
}

input[type=file]:active + label.ghost::before,
button.ghost:active::before,
button.text:active::before {
  opacity: .2;
}

button:disabled {
  opacity: .5;
  filter: grayscale(1);
  cursor: not-allowed;
}

button.danger {
  --button-color: var(--danger-color);
}*/

/* Inputs */

label {
  color: var(--text-color);
}

:is(
  input[type=text]:not([inputmode="search"]),
  input[type=number],
  input[type=date],
  input[type=password],
  textarea,
  select
) {
  min-width: calc(.6 * var(--tap-safe-size));
  min-height: calc(.6 * var(--tap-safe-size));
  box-sizing: border-box;
  font-family: inherit;
  font-size: inherit;
}

@media (any-pointer: coarse) {
  :is(
    input[type=text]:not([inputmode="search"]),
    input[type=number],
    input[type=date],
    input[type=password],
    textarea,
    select
  ) {
    min-width: var(--tap-safe-size);
    min-height: var(--tap-safe-size);
  }
}

/* Switch */

input-switch,
shiny-switch {
  --off-bg-color: var(--switch-unchecked-bg-color);
  --on-bg-color: var(--accent-color);
  --handle-color: var(--nav-bg-color);
  --handle-hover-color: var(--handle-color);
  --handle-active-color: var(--handle-color);
  --off-text-color: var(--handle-color);
  --on-text-color: var(--handle-color);
}

shiny-switch {
  --color: currentColor;
}

input-switch[disabled] {
  opacity: .7;
  cursor: not-allowed;
}

input[type=radio],
input[type=checkbox] {
  height: 0;
  width: 0;
  margin: 0;
  opacity: 0;
  pointer-events: none;
  position: absolute;
}

input:is([type=radio], [type=checkbox]) + label {
  display: inline-grid;
  grid-template-columns: 25px auto;
  gap: 0 5px;
  align-items: center;
  min-height: 24px;
  padding: 2px;
  padding-right: 7px;
  margin: 0;
  position: relative;
  border-radius: 8px;
  border: 2px solid var(--radio-off-color);
  overflow: hidden;
}

input[type=radio] + label {
  border-radius: 24px;
}

input:is([type=radio], [type=checkbox]) + label > span {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
  margin: auto;
  display: flex;
  align-items: center;
  gap: 5px;
}

input:is([type=radio], [type=checkbox]) + label::before {
  content: '';
  display: flex;
  grid-column: 1 / 2;
  grid-row: 1 / 2;
  width: 20px;
  height: 20px;
  background-color: var(--input-bg-color);
  border-radius: 4px;
  margin: auto;
  box-shadow: inset 0 0 2px 1px rgba(0, 0, 0, .3);
}

input[type=radio] + label::before {
  border-radius: 20px;
}

input:is([type=radio], [type=checkbox]) + label::after {
  content: '';
  display: flex;
  grid-column: 1 / 2;
  grid-row: 1 / 2;
  opacity: 0;
  margin: auto;
}

input[type=radio] + label::after {
  width: 10px;
  height: 10px;
  background-color: var(--radio-check-color);
  border-radius: 6px;
}

input[type=checkbox] + label::after {
  width: 8px;
  height: 14px;
  box-sizing: border-box;
  border-right: 3px solid var(--radio-check-color);
  border-bottom: 3px solid var(--radio-check-color);
  transform: translateY(-2px) rotate(45deg);
}

input:is([type=radio], [type=checkbox]):checked + label {
  border-color: var(--nav-text-color-on);
}

input:is([type=radio], [type=checkbox]):checked + label::before {
  background-color: var(--radio-checked-bg-color);
}

input:is([type=radio], [type=checkbox]):checked + label::after {
  opacity: 1;
}

/* Chip (ex : suggestions de recherche) */

input[type=checkbox] + label.chip {
  grid-template-columns: auto 0;
  gap: 0;
  padding: 2px 7px;
  background-color: transparent;
  color: var(--text-color);
  overflow: hidden;
}

input[type=checkbox] + label.chip::before,
input[type=checkbox] + label.chip::after {
  display: none;
}

input[type=checkbox] + label.chip > span {
  grid-column: 1;
  grid-row: 1;
  margin: auto;
}

input[type=checkbox]:checked + label.chip {
  grid-template-columns: auto 24px;
  gap: 0 5px;
  padding-right: 2px;
  border-color: var(--nav-text-color-on);
  background-color: var(--nav-text-color-on);
  color: var(--bg-color);
}

input[type=checkbox]:not(:checked) + label.chip > i {
  display: none;
}


input:is([type=radio], [type=checkbox], [type=file]):disabled + label {
  opacity: .5;
  filter: grayscale(1);
  cursor: not-allowed;
}

button:focus,
input:is([type=radio], [type=checkbox], [type=file]):focus + label {
  outline: 2px solid currentColor;
  outline: 5px auto Highlight;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: 1px;
}

button:focus:not(:focus-visible),
input:is([type=radio], [type=checkbox], [type=file]):focus:not(:focus-visible) + label {
  outline: none;
}

.filtered,
.off {
  display: none;
}